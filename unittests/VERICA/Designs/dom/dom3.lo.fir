circuit DOM : @[vlog/dom3.v:104.1-130.10]
  module AND2_X1 : @[lib/cells.v:19.1-23.10]
    input A1 : UInt<1> @[lib/cells.v:20.7-20.9]
    input A2 : UInt<1> @[lib/cells.v:20.11-20.13]
    output ZN : UInt<1> @[lib/cells.v:21.8-21.10]

    node _and_lib_cells_v_22_4 = and(A1, asUInt(A2)) @[lib/cells.v:22.14-22.21 lib/cells.v:22.14-22.21]
    ZN <= bits(_and_lib_cells_v_22_4, 0, 0) @[lib/cells.v:21.8-21.10]

  module DFF_X1 : @[lib/cells.v:49.1-56.10]
    input CK : UInt<1> @[lib/cells.v:50.7-50.9]
    input D : UInt<1> @[lib/cells.v:50.11-50.12]
    output Q : UInt<1> @[lib/cells.v:51.12-51.13]
    output QN : UInt<1> @[lib/cells.v:51.15-51.17]

    reg _procdff_14 : UInt<1>, asClock(CK) with :
      reset => (UInt<1>("h0"), _procdff_14) @[lib/cells.v:54.1-55.11]
    reg _procdff_15 : UInt<1>, asClock(CK) with :
      reset => (UInt<1>("h0"), _procdff_15) @[lib/cells.v:52.1-53.9]
    node _not_lib_cells_v_55_13 = not(pad(D, 1)) @[lib/cells.v:55.8-55.10 lib/cells.v:55.8-55.10]
    node _0_QN_0_0_ = bits(_not_lib_cells_v_55_13, 0, 0) @[lib/cells.v:54.1-55.11 lib/cells.v:54.1-55.11]
    Q <= bits(_procdff_15, 0, 0) @[lib/cells.v:51.12-51.13]
    QN <= bits(_procdff_14, 0, 0) @[lib/cells.v:51.15-51.17]
    _procdff_14 <= _0_QN_0_0_ @[lib/cells.v:54.1-55.11]
    _procdff_15 <= D @[lib/cells.v:52.1-53.9]

  module XNOR2_X1 : @[lib/cells.v:43.1-47.10]
    input A : UInt<1> @[lib/cells.v:44.7-44.8]
    input B : UInt<1> @[lib/cells.v:44.10-44.11]
    output ZN : UInt<1> @[lib/cells.v:45.8-45.10]

    node _xor_lib_cells_v_46_9 = xor(A, asUInt(B)) @[lib/cells.v:46.15-46.20 lib/cells.v:46.15-46.20]
    node _xor_lib_cells_v_46_9_Y = bits(_xor_lib_cells_v_46_9, 0, 0) @[lib/cells.v:46.15-46.20 lib/cells.v:46.15-46.20]
    node _not_lib_cells_v_46_10 = not(pad(_xor_lib_cells_v_46_9_Y, 1)) @[lib/cells.v:46.13-46.21 lib/cells.v:46.13-46.21]
    ZN <= bits(_not_lib_cells_v_46_10, 0, 0) @[lib/cells.v:45.8-45.10]

  module XOR2_X1 : @[lib/cells.v:37.1-41.10]
    input A : UInt<1> @[lib/cells.v:38.7-38.8]
    input B : UInt<1> @[lib/cells.v:38.10-38.11]
    output Z : UInt<1> @[lib/cells.v:39.8-39.9]

    node _xor_lib_cells_v_40_8 = xor(A, asUInt(B)) @[lib/cells.v:40.13-40.18 lib/cells.v:40.13-40.18]
    Z <= bits(_xor_lib_cells_v_40_8, 0, 0) @[lib/cells.v:39.8-39.9]

  module DOMcmp : @[vlog/dom3.v:81.1-101.10]
    output port_c : UInt<4> @[vlog/dom3.v:86.16-86.22]
    input port_v_0 : UInt<4> @[vlog/dom3.v:82.15-82.23]
    input port_v_1 : UInt<4> @[vlog/dom3.v:83.15-83.23]
    input port_v_2 : UInt<4> @[vlog/dom3.v:84.15-84.23]
    input port_v_3 : UInt<4> @[vlog/dom3.v:85.15-85.23]

    inst U1 of XOR2_X1 @[vlog/dom3.v:89.11-89.58]
    inst U10 of XOR2_X1 @[vlog/dom3.v:98.11-98.59]
    inst U11 of XNOR2_X1 @[vlog/dom3.v:99.12-99.61]
    inst U12 of XNOR2_X1 @[vlog/dom3.v:100.12-100.50]
    inst U2 of XNOR2_X1 @[vlog/dom3.v:90.12-90.60]
    inst U3 of XNOR2_X1 @[vlog/dom3.v:91.12-91.49]
    inst U4 of XOR2_X1 @[vlog/dom3.v:92.11-92.58]
    inst U5 of XNOR2_X1 @[vlog/dom3.v:93.12-93.60]
    inst U6 of XNOR2_X1 @[vlog/dom3.v:94.12-94.49]
    inst U7 of XOR2_X1 @[vlog/dom3.v:95.11-95.58]
    inst U8 of XNOR2_X1 @[vlog/dom3.v:96.12-96.60]
    inst U9 of XNOR2_X1 @[vlog/dom3.v:97.12-97.49]
    node n1 = U2.ZN @[vlog/dom3.v:87.10-87.12 vlog/dom3.v:90.12-90.60]
    node n2 = U1.Z @[vlog/dom3.v:87.14-87.16 vlog/dom3.v:89.11-89.58]
    node n3 = U5.ZN @[vlog/dom3.v:87.18-87.20 vlog/dom3.v:93.12-93.60]
    node n4 = U4.Z @[vlog/dom3.v:87.22-87.24 vlog/dom3.v:92.11-92.58]
    node n5 = U8.ZN @[vlog/dom3.v:87.26-87.28 vlog/dom3.v:96.12-96.60]
    node n6 = U7.Z @[vlog/dom3.v:87.30-87.32 vlog/dom3.v:95.11-95.58]
    node n7 = U11.ZN @[vlog/dom3.v:87.34-87.36 vlog/dom3.v:99.12-99.61]
    node n8 = U10.Z @[vlog/dom3.v:87.38-87.40 vlog/dom3.v:98.11-98.59]
    port_c <= cat(bits(U12.ZN, 0, 0), cat(bits(U9.ZN, 0, 0), cat(bits(U6.ZN, 0, 0), bits(U3.ZN, 0, 0)))) @[vlog/dom3.v:86.16-86.22]
    U1.A <= bits(port_v_0, 2, 2) @[vlog/dom3.v:89.11-89.58]
    U1.B <= bits(port_v_0, 3, 3) @[vlog/dom3.v:89.11-89.58]
    U10.A <= bits(port_v_3, 2, 2) @[vlog/dom3.v:98.11-98.59]
    U10.B <= bits(port_v_3, 3, 3) @[vlog/dom3.v:98.11-98.59]
    U11.A <= bits(port_v_3, 1, 1) @[vlog/dom3.v:99.12-99.61]
    U11.B <= bits(port_v_3, 0, 0) @[vlog/dom3.v:99.12-99.61]
    U12.A <= n8 @[vlog/dom3.v:100.12-100.50]
    U12.B <= n7 @[vlog/dom3.v:100.12-100.50]
    U2.A <= bits(port_v_0, 1, 1) @[vlog/dom3.v:90.12-90.60]
    U2.B <= bits(port_v_0, 0, 0) @[vlog/dom3.v:90.12-90.60]
    U3.A <= n2 @[vlog/dom3.v:91.12-91.49]
    U3.B <= n1 @[vlog/dom3.v:91.12-91.49]
    U4.A <= bits(port_v_1, 2, 2) @[vlog/dom3.v:92.11-92.58]
    U4.B <= bits(port_v_1, 3, 3) @[vlog/dom3.v:92.11-92.58]
    U5.A <= bits(port_v_1, 1, 1) @[vlog/dom3.v:93.12-93.60]
    U5.B <= bits(port_v_1, 0, 0) @[vlog/dom3.v:93.12-93.60]
    U6.A <= n4 @[vlog/dom3.v:94.12-94.49]
    U6.B <= n3 @[vlog/dom3.v:94.12-94.49]
    U7.A <= bits(port_v_2, 2, 2) @[vlog/dom3.v:95.11-95.58]
    U7.B <= bits(port_v_2, 3, 3) @[vlog/dom3.v:95.11-95.58]
    U8.A <= bits(port_v_2, 1, 1) @[vlog/dom3.v:96.12-96.60]
    U8.B <= bits(port_v_2, 0, 0) @[vlog/dom3.v:96.12-96.60]
    U9.A <= n6 @[vlog/dom3.v:97.12-97.49]
    U9.B <= n5 @[vlog/dom3.v:97.12-97.49]

  module DOMmul : @[vlog/dom3.v:8.1-33.10]
    input port_a : UInt<4> @[vlog/dom3.v:9.15-9.21]
    input port_b : UInt<4> @[vlog/dom3.v:10.15-10.21]
    output port_u_0 : UInt<4> @[vlog/dom3.v:11.16-11.24]
    output port_u_1 : UInt<4> @[vlog/dom3.v:12.16-12.24]
    output port_u_2 : UInt<4> @[vlog/dom3.v:13.16-13.24]
    output port_u_3 : UInt<4> @[vlog/dom3.v:14.16-14.24]

    inst U1 of AND2_X1 @[vlog/dom3.v:17.11-17.66]
    inst U10 of AND2_X1 @[vlog/dom3.v:26.11-26.67]
    inst U11 of AND2_X1 @[vlog/dom3.v:27.11-27.67]
    inst U12 of AND2_X1 @[vlog/dom3.v:28.11-28.67]
    inst U13 of AND2_X1 @[vlog/dom3.v:29.11-29.67]
    inst U14 of AND2_X1 @[vlog/dom3.v:30.11-30.67]
    inst U15 of AND2_X1 @[vlog/dom3.v:31.11-31.67]
    inst U16 of AND2_X1 @[vlog/dom3.v:32.11-32.67]
    inst U2 of AND2_X1 @[vlog/dom3.v:18.11-18.66]
    inst U3 of AND2_X1 @[vlog/dom3.v:19.11-19.66]
    inst U4 of AND2_X1 @[vlog/dom3.v:20.11-20.66]
    inst U5 of AND2_X1 @[vlog/dom3.v:21.11-21.66]
    inst U6 of AND2_X1 @[vlog/dom3.v:22.11-22.66]
    inst U7 of AND2_X1 @[vlog/dom3.v:23.11-23.66]
    inst U8 of AND2_X1 @[vlog/dom3.v:24.11-24.66]
    inst U9 of AND2_X1 @[vlog/dom3.v:25.11-25.66]
    port_u_0 <= cat(bits(U14.ZN, 0, 0), cat(bits(U15.ZN, 0, 0), cat(bits(U16.ZN, 0, 0), bits(U9.ZN, 0, 0)))) @[vlog/dom3.v:11.16-11.24]
    port_u_1 <= cat(bits(U5.ZN, 0, 0), cat(bits(U6.ZN, 0, 0), cat(bits(U7.ZN, 0, 0), bits(U8.ZN, 0, 0)))) @[vlog/dom3.v:12.16-12.24]
    port_u_2 <= cat(bits(U10.ZN, 0, 0), cat(bits(U11.ZN, 0, 0), cat(bits(U12.ZN, 0, 0), bits(U13.ZN, 0, 0)))) @[vlog/dom3.v:13.16-13.24]
    port_u_3 <= cat(bits(U1.ZN, 0, 0), cat(bits(U2.ZN, 0, 0), cat(bits(U3.ZN, 0, 0), bits(U4.ZN, 0, 0)))) @[vlog/dom3.v:14.16-14.24]
    U1.A1 <= bits(port_b, 3, 3) @[vlog/dom3.v:17.11-17.66]
    U1.A2 <= bits(port_a, 3, 3) @[vlog/dom3.v:17.11-17.66]
    U10.A1 <= bits(port_b, 3, 3) @[vlog/dom3.v:26.11-26.67]
    U10.A2 <= bits(port_a, 2, 2) @[vlog/dom3.v:26.11-26.67]
    U11.A1 <= bits(port_b, 2, 2) @[vlog/dom3.v:27.11-27.67]
    U11.A2 <= bits(port_a, 2, 2) @[vlog/dom3.v:27.11-27.67]
    U12.A1 <= bits(port_b, 1, 1) @[vlog/dom3.v:28.11-28.67]
    U12.A2 <= bits(port_a, 2, 2) @[vlog/dom3.v:28.11-28.67]
    U13.A1 <= bits(port_a, 2, 2) @[vlog/dom3.v:29.11-29.67]
    U13.A2 <= bits(port_b, 0, 0) @[vlog/dom3.v:29.11-29.67]
    U14.A1 <= bits(port_a, 0, 0) @[vlog/dom3.v:30.11-30.67]
    U14.A2 <= bits(port_b, 3, 3) @[vlog/dom3.v:30.11-30.67]
    U15.A1 <= bits(port_a, 0, 0) @[vlog/dom3.v:31.11-31.67]
    U15.A2 <= bits(port_b, 2, 2) @[vlog/dom3.v:31.11-31.67]
    U16.A1 <= bits(port_b, 1, 1) @[vlog/dom3.v:32.11-32.67]
    U16.A2 <= bits(port_a, 0, 0) @[vlog/dom3.v:32.11-32.67]
    U2.A1 <= bits(port_b, 2, 2) @[vlog/dom3.v:18.11-18.66]
    U2.A2 <= bits(port_a, 3, 3) @[vlog/dom3.v:18.11-18.66]
    U3.A1 <= bits(port_b, 1, 1) @[vlog/dom3.v:19.11-19.66]
    U3.A2 <= bits(port_a, 3, 3) @[vlog/dom3.v:19.11-19.66]
    U4.A1 <= bits(port_b, 0, 0) @[vlog/dom3.v:20.11-20.66]
    U4.A2 <= bits(port_a, 3, 3) @[vlog/dom3.v:20.11-20.66]
    U5.A1 <= bits(port_b, 3, 3) @[vlog/dom3.v:21.11-21.66]
    U5.A2 <= bits(port_a, 1, 1) @[vlog/dom3.v:21.11-21.66]
    U6.A1 <= bits(port_b, 2, 2) @[vlog/dom3.v:22.11-22.66]
    U6.A2 <= bits(port_a, 1, 1) @[vlog/dom3.v:22.11-22.66]
    U7.A1 <= bits(port_b, 1, 1) @[vlog/dom3.v:23.11-23.66]
    U7.A2 <= bits(port_a, 1, 1) @[vlog/dom3.v:23.11-23.66]
    U8.A1 <= bits(port_b, 0, 0) @[vlog/dom3.v:24.11-24.66]
    U8.A2 <= bits(port_a, 1, 1) @[vlog/dom3.v:24.11-24.66]
    U9.A1 <= bits(port_a, 0, 0) @[vlog/dom3.v:25.11-25.66]
    U9.A2 <= bits(port_b, 0, 0) @[vlog/dom3.v:25.11-25.66]

  module DOMref : @[vlog/dom3.v:36.1-78.10]
    input clk : UInt<1> @[vlog/dom3.v:47.9-47.12]
    input port_r : UInt<6> @[vlog/dom3.v:46.15-46.21]
    input port_u_0 : UInt<4> @[vlog/dom3.v:38.15-38.23]
    input port_u_1 : UInt<4> @[vlog/dom3.v:39.15-39.23]
    input port_u_2 : UInt<4> @[vlog/dom3.v:40.15-40.23]
    input port_u_3 : UInt<4> @[vlog/dom3.v:41.15-41.23]
    output port_v_0 : UInt<4> @[vlog/dom3.v:42.16-42.24]
    output port_v_1 : UInt<4> @[vlog/dom3.v:43.16-43.24]
    output port_v_2 : UInt<4> @[vlog/dom3.v:44.16-44.24]
    output port_v_3 : UInt<4> @[vlog/dom3.v:45.16-45.24]
    input reset : UInt<1> @[vlog/dom3.v:47.14-47.19]

    inst U10 of XOR2_X1 @[vlog/dom3.v:73.11-73.57]
    inst U11 of XOR2_X1 @[vlog/dom3.v:74.11-74.57]
    inst U12 of XOR2_X1 @[vlog/dom3.v:75.11-75.57]
    inst U13 of XOR2_X1 @[vlog/dom3.v:76.11-76.58]
    inst U14 of XOR2_X1 @[vlog/dom3.v:77.11-77.58]
    inst U3 of XOR2_X1 @[vlog/dom3.v:66.11-66.56]
    inst U4 of XOR2_X1 @[vlog/dom3.v:67.11-67.56]
    inst U5 of XOR2_X1 @[vlog/dom3.v:68.11-68.56]
    inst U6 of XOR2_X1 @[vlog/dom3.v:69.11-69.56]
    inst U7 of XOR2_X1 @[vlog/dom3.v:70.11-70.56]
    inst U8 of XOR2_X1 @[vlog/dom3.v:71.11-71.56]
    inst U9 of XOR2_X1 @[vlog/dom3.v:72.11-72.56]
    inst ff_0_reg_0_ of DFF_X1 @[vlog/dom3.v:65.10-65.75]
    inst ff_0_reg_1_ of DFF_X1 @[vlog/dom3.v:64.10-64.66]
    inst ff_0_reg_2_ of DFF_X1 @[vlog/dom3.v:63.10-63.66]
    inst ff_0_reg_3_ of DFF_X1 @[vlog/dom3.v:62.10-62.66]
    inst ff_1_reg_0_ of DFF_X1 @[vlog/dom3.v:57.10-57.66]
    inst ff_1_reg_1_ of DFF_X1 @[vlog/dom3.v:56.10-56.75]
    inst ff_1_reg_2_ of DFF_X1 @[vlog/dom3.v:55.10-55.66]
    inst ff_1_reg_3_ of DFF_X1 @[vlog/dom3.v:54.10-54.66]
    inst ff_2_reg_0_ of DFF_X1 @[vlog/dom3.v:61.10-61.66]
    inst ff_2_reg_1_ of DFF_X1 @[vlog/dom3.v:60.10-60.66]
    inst ff_2_reg_2_ of DFF_X1 @[vlog/dom3.v:59.10-59.75]
    inst ff_2_reg_3_ of DFF_X1 @[vlog/dom3.v:58.10-58.66]
    inst ff_3_reg_0_ of DFF_X1 @[vlog/dom3.v:53.10-53.66]
    inst ff_3_reg_1_ of DFF_X1 @[vlog/dom3.v:52.10-52.67]
    inst ff_3_reg_2_ of DFF_X1 @[vlog/dom3.v:51.10-51.67]
    inst ff_3_reg_3_ of DFF_X1 @[vlog/dom3.v:50.10-50.75]
    node N0 = U3.Z @[vlog/dom3.v:48.10-48.12 vlog/dom3.v:66.11-66.56]
    node N1 = U4.Z @[vlog/dom3.v:48.14-48.16 vlog/dom3.v:67.11-67.56]
    node N10 = U13.Z @[vlog/dom3.v:48.50-48.53 vlog/dom3.v:76.11-76.58]
    node N11 = U14.Z @[vlog/dom3.v:48.55-48.58 vlog/dom3.v:77.11-77.58]
    node N2 = U5.Z @[vlog/dom3.v:48.18-48.20 vlog/dom3.v:68.11-68.56]
    node N3 = U9.Z @[vlog/dom3.v:48.22-48.24 vlog/dom3.v:72.11-72.56]
    node N4 = U10.Z @[vlog/dom3.v:48.26-48.28 vlog/dom3.v:73.11-73.57]
    node N5 = U11.Z @[vlog/dom3.v:48.30-48.32 vlog/dom3.v:74.11-74.57]
    node N6 = U6.Z @[vlog/dom3.v:48.34-48.36 vlog/dom3.v:69.11-69.56]
    node N7 = U7.Z @[vlog/dom3.v:48.38-48.40 vlog/dom3.v:70.11-70.56]
    node N8 = U8.Z @[vlog/dom3.v:48.42-48.44 vlog/dom3.v:71.11-71.56]
    node N9 = U12.Z @[vlog/dom3.v:48.46-48.48 vlog/dom3.v:75.11-75.57]
    port_v_0 <= cat(bits(ff_0_reg_3_.Q, 0, 0), cat(bits(ff_0_reg_2_.Q, 0, 0), cat(bits(ff_0_reg_1_.Q, 0, 0), bits(ff_0_reg_0_.Q, 0, 0)))) @[vlog/dom3.v:42.16-42.24]
    port_v_1 <= cat(bits(ff_1_reg_3_.Q, 0, 0), cat(bits(ff_1_reg_2_.Q, 0, 0), cat(bits(ff_1_reg_1_.Q, 0, 0), bits(ff_1_reg_0_.Q, 0, 0)))) @[vlog/dom3.v:43.16-43.24]
    port_v_2 <= cat(bits(ff_2_reg_3_.Q, 0, 0), cat(bits(ff_2_reg_2_.Q, 0, 0), cat(bits(ff_2_reg_1_.Q, 0, 0), bits(ff_2_reg_0_.Q, 0, 0)))) @[vlog/dom3.v:44.16-44.24]
    port_v_3 <= cat(bits(ff_3_reg_3_.Q, 0, 0), cat(bits(ff_3_reg_2_.Q, 0, 0), cat(bits(ff_3_reg_1_.Q, 0, 0), bits(ff_3_reg_0_.Q, 0, 0)))) @[vlog/dom3.v:45.16-45.24]
    U10.A <= bits(port_r, 2, 2) @[vlog/dom3.v:73.11-73.57]
    U10.B <= bits(port_u_1, 2, 2) @[vlog/dom3.v:73.11-73.57]
    U11.A <= bits(port_r, 4, 4) @[vlog/dom3.v:74.11-74.57]
    U11.B <= bits(port_u_1, 3, 3) @[vlog/dom3.v:74.11-74.57]
    U12.A <= bits(port_r, 3, 3) @[vlog/dom3.v:75.11-75.57]
    U12.B <= bits(port_u_3, 0, 0) @[vlog/dom3.v:75.11-75.57]
    U13.A <= bits(port_r, 4, 4) @[vlog/dom3.v:76.11-76.58]
    U13.B <= bits(port_u_3, 1, 1) @[vlog/dom3.v:76.11-76.58]
    U14.A <= bits(port_r, 5, 5) @[vlog/dom3.v:77.11-77.58]
    U14.B <= bits(port_u_3, 2, 2) @[vlog/dom3.v:77.11-77.58]
    U3.A <= bits(port_r, 0, 0) @[vlog/dom3.v:66.11-66.56]
    U3.B <= bits(port_u_0, 1, 1) @[vlog/dom3.v:66.11-66.56]
    U4.A <= bits(port_r, 1, 1) @[vlog/dom3.v:67.11-67.56]
    U4.B <= bits(port_u_0, 2, 2) @[vlog/dom3.v:67.11-67.56]
    U5.A <= bits(port_r, 3, 3) @[vlog/dom3.v:68.11-68.56]
    U5.B <= bits(port_u_0, 3, 3) @[vlog/dom3.v:68.11-68.56]
    U6.A <= bits(port_r, 1, 1) @[vlog/dom3.v:69.11-69.56]
    U6.B <= bits(port_u_2, 0, 0) @[vlog/dom3.v:69.11-69.56]
    U7.A <= bits(port_r, 2, 2) @[vlog/dom3.v:70.11-70.56]
    U7.B <= bits(port_u_2, 1, 1) @[vlog/dom3.v:70.11-70.56]
    U8.A <= bits(port_r, 5, 5) @[vlog/dom3.v:71.11-71.56]
    U8.B <= bits(port_u_2, 3, 3) @[vlog/dom3.v:71.11-71.56]
    U9.A <= bits(port_r, 0, 0) @[vlog/dom3.v:72.11-72.56]
    U9.B <= bits(port_u_1, 0, 0) @[vlog/dom3.v:72.11-72.56]
    ff_0_reg_0_.CK <= clk @[vlog/dom3.v:65.10-65.75]
    ff_0_reg_0_.D <= bits(port_u_0, 0, 0) @[vlog/dom3.v:65.10-65.75]
    ff_0_reg_1_.CK <= clk @[vlog/dom3.v:64.10-64.66]
    ff_0_reg_1_.D <= N0 @[vlog/dom3.v:64.10-64.66]
    ff_0_reg_2_.CK <= clk @[vlog/dom3.v:63.10-63.66]
    ff_0_reg_2_.D <= N1 @[vlog/dom3.v:63.10-63.66]
    ff_0_reg_3_.CK <= clk @[vlog/dom3.v:62.10-62.66]
    ff_0_reg_3_.D <= N2 @[vlog/dom3.v:62.10-62.66]
    ff_1_reg_0_.CK <= clk @[vlog/dom3.v:57.10-57.66]
    ff_1_reg_0_.D <= N3 @[vlog/dom3.v:57.10-57.66]
    ff_1_reg_1_.CK <= clk @[vlog/dom3.v:56.10-56.75]
    ff_1_reg_1_.D <= bits(port_u_1, 1, 1) @[vlog/dom3.v:56.10-56.75]
    ff_1_reg_2_.CK <= clk @[vlog/dom3.v:55.10-55.66]
    ff_1_reg_2_.D <= N4 @[vlog/dom3.v:55.10-55.66]
    ff_1_reg_3_.CK <= clk @[vlog/dom3.v:54.10-54.66]
    ff_1_reg_3_.D <= N5 @[vlog/dom3.v:54.10-54.66]
    ff_2_reg_0_.CK <= clk @[vlog/dom3.v:61.10-61.66]
    ff_2_reg_0_.D <= N6 @[vlog/dom3.v:61.10-61.66]
    ff_2_reg_1_.CK <= clk @[vlog/dom3.v:60.10-60.66]
    ff_2_reg_1_.D <= N7 @[vlog/dom3.v:60.10-60.66]
    ff_2_reg_2_.CK <= clk @[vlog/dom3.v:59.10-59.75]
    ff_2_reg_2_.D <= bits(port_u_2, 2, 2) @[vlog/dom3.v:59.10-59.75]
    ff_2_reg_3_.CK <= clk @[vlog/dom3.v:58.10-58.66]
    ff_2_reg_3_.D <= N8 @[vlog/dom3.v:58.10-58.66]
    ff_3_reg_0_.CK <= clk @[vlog/dom3.v:53.10-53.66]
    ff_3_reg_0_.D <= N9 @[vlog/dom3.v:53.10-53.66]
    ff_3_reg_1_.CK <= clk @[vlog/dom3.v:52.10-52.67]
    ff_3_reg_1_.D <= N10 @[vlog/dom3.v:52.10-52.67]
    ff_3_reg_2_.CK <= clk @[vlog/dom3.v:51.10-51.67]
    ff_3_reg_2_.D <= N11 @[vlog/dom3.v:51.10-51.67]
    ff_3_reg_3_.CK <= clk @[vlog/dom3.v:50.10-50.75]
    ff_3_reg_3_.D <= bits(port_u_3, 3, 3) @[vlog/dom3.v:50.10-50.75]

  module DOM : @[vlog/dom3.v:104.1-130.10]
    input clk : UInt<1> @[vlog/dom3.v:109.9-109.12]
    input port_a : UInt<4> @[vlog/dom3.v:105.15-105.21]
    input port_b : UInt<4> @[vlog/dom3.v:106.15-106.21]
    output port_c : UInt<4> @[vlog/dom3.v:107.16-107.22]
    input port_r : UInt<6> @[vlog/dom3.v:108.15-108.21]
    input reset : UInt<1> @[vlog/dom3.v:109.14-109.19]

    inst cmp of DOMcmp @[vlog/dom3.v:127.10-129.11]
    inst mul_ of DOMmul @[vlog/dom3.v:120.10-122.24]
    inst ref_1_ of DOMref @[vlog/dom3.v:123.10-126.68]
    node mul_port_u_0 = mul_.port_u_0 @[vlog/dom3.v:111.16-111.28 vlog/dom3.v:120.10-122.24]
    node mul_port_u_1 = mul_.port_u_1 @[vlog/dom3.v:112.16-112.28 vlog/dom3.v:120.10-122.24]
    node mul_port_u_2 = mul_.port_u_2 @[vlog/dom3.v:113.16-113.28 vlog/dom3.v:120.10-122.24]
    node mul_port_u_3 = mul_.port_u_3 @[vlog/dom3.v:114.16-114.28 vlog/dom3.v:120.10-122.24]
    node ref_1_port_v_0 = ref_1_.port_v_0 @[vlog/dom3.v:115.16-115.30 vlog/dom3.v:123.10-126.68]
    node ref_1_port_v_1 = ref_1_.port_v_1 @[vlog/dom3.v:116.16-116.30 vlog/dom3.v:123.10-126.68]
    node ref_1_port_v_2 = ref_1_.port_v_2 @[vlog/dom3.v:117.16-117.30 vlog/dom3.v:123.10-126.68]
    node ref_1_port_v_3 = ref_1_.port_v_3 @[vlog/dom3.v:118.16-118.30 vlog/dom3.v:123.10-126.68]
    port_c <= cmp.port_c @[vlog/dom3.v:127.10-129.11]
    cmp.port_v_0 <= ref_1_port_v_0 @[vlog/dom3.v:127.10-129.11]
    cmp.port_v_1 <= ref_1_port_v_1 @[vlog/dom3.v:127.10-129.11]
    cmp.port_v_2 <= ref_1_port_v_2 @[vlog/dom3.v:127.10-129.11]
    cmp.port_v_3 <= ref_1_port_v_3 @[vlog/dom3.v:127.10-129.11]
    mul_.port_a <= port_a @[vlog/dom3.v:120.10-122.24]
    mul_.port_b <= port_b @[vlog/dom3.v:120.10-122.24]
    ref_1_.clk <= clk @[vlog/dom3.v:123.10-126.68]
    ref_1_.port_r <= port_r @[vlog/dom3.v:123.10-126.68]
    ref_1_.port_u_0 <= mul_port_u_0 @[vlog/dom3.v:123.10-126.68]
    ref_1_.port_u_1 <= mul_port_u_1 @[vlog/dom3.v:123.10-126.68]
    ref_1_.port_u_2 <= mul_port_u_2 @[vlog/dom3.v:123.10-126.68]
    ref_1_.port_u_3 <= mul_port_u_3 @[vlog/dom3.v:123.10-126.68]
    ref_1_.reset <= UInt<1>("h0") @[vlog/dom3.v:123.10-126.68]
